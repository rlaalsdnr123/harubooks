package kr.or.ddit.controller.ljy.pub;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.service.ljy.RemainMngService;
import kr.or.ddit.vo.ljy.PoMngVO;
import kr.or.ddit.vo.ljy.RemainMngVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/pub/remain")
@PreAuthorize("hasRole('ROLE_PUBLISHER')")
public class RemainPubRestController {

	@Autowired
	private RemainMngService remainService;
	
	// 출판사 재고 내역 가져오기
	@ResponseBody
	@GetMapping("/list")
	public RemainMngVO remainPubList(
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(name="searchType", required = false, defaultValue = "title") String searchType,
			@RequestParam(name="searchWord",required = false, defaultValue = "") String searchWord
			) {
		String id = SecurityContextHolder.getContext().getAuthentication().getName();
		log.info("remainPubList controller 도착");
		log.info("출판사 로그인 id : {}", id);
		log.info("page " + currentPage);
		RemainMngVO remainMngVO = new RemainMngVO();
		// 검색했을 때 검색 타입, 검색어 setting
		if(StringUtils.isNotBlank(searchWord)) {	
			remainMngVO.setSearchType(searchType);
			remainMngVO.setSearchWord(searchWord);
		}
		// 출판사 id setting
		remainMngVO.setAe_id(id);
		remainMngVO.setCurrentPage(currentPage);
		// 전체 list 개수 setting
		int totalRecord = remainService.remainPubListCnt(remainMngVO);
		log.info("totalRecord : " + totalRecord);
		remainMngVO.setTotalRecord(totalRecord);
		List<RemainMngVO> dataList = remainService.remainPubList(remainMngVO); 
		log.info("dataList : " + dataList);
		remainMngVO.setDataList(dataList);
		log.info("id" + id);
		log.info("" + remainMngVO);
		return remainMngVO;
	}
	
	// 출판사 발주 내역 가져오기
	@ResponseBody
	@GetMapping("/polist")
	public List<PoMngVO> poPubList(
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage
			){
		String id = SecurityContextHolder.getContext().getAuthentication().getName();
		PoMngVO poMngVO = new PoMngVO();
		poMngVO.setAe_id(id);
		return remainService.poPubList(poMngVO);
	}
	
	// 발주 승인 
	@ResponseBody
	@PostMapping("/poreq")
	public String poReqPub(@RequestBody List<PoMngVO> poreqPubList) {
		String id = SecurityContextHolder.getContext().getAuthentication().getName();
		log.info("poreq controller 도착" );
		log.info("poreqList " + poreqPubList);
		for (PoMngVO poMngVO : poreqPubList) {
			poMngVO.setAe_id(id);
		}
		String res = remainService.poReqPub(poreqPubList);
		return res;
	}
	
	// 발주 거절
	@ResponseBody
	@PostMapping("/porej")
	public String poRejPub(@RequestBody List<PoMngVO> porejPubList) {
		String id = SecurityContextHolder.getContext().getAuthentication().getName();
		log.info("porej controller 도착" );
		log.info("porejList " + porejPubList);
		for (PoMngVO poMngVO : porejPubList) {
			poMngVO.setAe_id(id);
		}
		String res = remainService.poRejPub(porejPubList);
		return res;
	}
	
	// 출판사 재고 상태에 따른 재고 리스트 가져오기
	@ResponseBody
	@GetMapping("/list/{bm_cnt_status}")
	public RemainMngVO remainPubListCntStatus(
			@PathVariable("bm_cnt_status") int bm_cnt_status,
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage
			) {
		log.info("remainPubListCntStatus controller 도착");
		String id = SecurityContextHolder.getContext().getAuthentication().getName();
		log.info("출판사 로그인 id : {}", id);
		log.info("page " + currentPage);
		log.info("bm_cnt_status " + bm_cnt_status);
		RemainMngVO remainMngVO = new RemainMngVO();
		// 출판사 id setting
		remainMngVO.setAe_id(id);
		remainMngVO.setCurrentPage(currentPage);
		// 재고 상태 설정
		remainMngVO.setBm_cnt_status(bm_cnt_status);
		// 전체 list 개수 setting
		int totalRecord = remainService.remainPubListCnt(remainMngVO);
		remainMngVO.setTotalRecord(totalRecord);
		List<RemainMngVO> dataList = remainService.remainPubList(remainMngVO); 
		log.info("dataList : " + dataList);
		remainMngVO.setDataList(dataList);
		return remainMngVO;
	}
}
