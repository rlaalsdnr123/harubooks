package kr.or.ddit.controller.ljy.mng;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.controller.file.UploadFileUtils;
import kr.or.ddit.service.FileService;
import kr.or.ddit.service.ljy.InquiryReplyService;
import kr.or.ddit.service.ljy.InquiryService;
import kr.or.ddit.service.ljy.NoticeService;
import kr.or.ddit.vo.FileVO;
import kr.or.ddit.vo.ljy.InquiryReplyVO;
import kr.or.ddit.vo.ljy.InquiryVO;
import kr.or.ddit.vo.ljy.NoticeVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/mng/board")
@Slf4j
public class BoardRestController {
	
	// 파일 저장 경로 - root-context.xml에 설정
	@Resource(name="uploadFiles")
	private String uploadPath;
	
	@Autowired
	private NoticeService noticeService;
	@Autowired
	private InquiryService inquiryService;
	@Autowired
	private InquiryReplyService inqRepService;
	@Autowired
	private FileService fileService;
	// 공지 리스트 notice list
	@ResponseBody
	@GetMapping(value="/notice", produces = "application/json;charset=utf-8")
	public List<NoticeVO> noticeList(){
		log.debug("noticeList controller 도착");
		return noticeService.noticeList();
	}
	
	// 공지 1개 조회
	@ResponseBody
	@GetMapping(value = "/notice/{no_no}", produces = "application/json;charset=utf-8")
	public NoticeVO noticeOne(@PathVariable("no_no") String notice_no) {
		return noticeService.noticeOne(notice_no);
	}
	
	// 공지사항 등록(비동기로 파일 업로드) 1개 업로드
	@ResponseBody
	@PostMapping(value="/notice", produces = "text/plain; charset=utf-8")
	public String noticeInsert(NoticeVO noticeVO) throws IOException {
		log.info("noticeInsert controller 도착");
		System.out.println("content : "+noticeVO.getNotice_content());
		System.out.println("title" + noticeVO.getNotice_title());
		System.out.println("noticeVO file" + noticeVO.getNotice_file().getName());
		MultipartFile nFile = noticeVO.getNotice_file();
		System.out.println("file.name" + nFile.getOriginalFilename());
		String uploadedFileName = UploadFileUtils.uploadFile(uploadPath, nFile.getOriginalFilename(), nFile.getBytes());
		String savedName = uploadedFileName.substring(uploadedFileName.lastIndexOf("/") + 1) ;
		System.out.println("savedName" + savedName);
		System.out.println("uploadedFileName : " + uploadedFileName);
		String destPath = "C:"+ uploadPath + uploadedFileName;
		System.out.println("destPath : " + destPath);
		String fileType = nFile.getOriginalFilename().substring(nFile.getOriginalFilename().lastIndexOf(".") + 1);// 확장자
		System.out.println("fileType : " + fileType);
		nFile.transferTo(new File(destPath));
		System.out.println("파일 복사 성공");
		// 파일 업로드
		FileVO fileVO = new FileVO();
		fileVO.setUa_sn("1");
		fileVO.setUa_type("NOTICE");
		fileVO.setUa_path(destPath);
		fileVO.setUa_nm(nFile.getOriginalFilename());
		fileVO.setUa_stre_nm(savedName);
		fileVO.setUa_file_type(fileType);
		fileVO.setUa_size(nFile.getSize());
		fileVO.setUa_regist_id("yolo");	// 나중에 등록자 id로 바꿀 부분
		int cnt = fileService.fileInsert(fileVO);
		System.out.println("file upload insert cnt " + cnt);
		
		String uploadrslt = "";
		// 공지사항 등록
		if(cnt > 0) {// 파일 등록 성공
			noticeVO.setUa_no(fileVO.getUa_no());
			int rslt = noticeService.noticeInsert(noticeVO);
			if(rslt >0 ) {
				uploadrslt = noticeVO.getNotice_no();
			} else {
				uploadrslt = "fail";
			}
		} 
		return uploadrslt;
	}
	
	// 공지사항 등록(비동기로 파일 업로드)
//	@PostMapping(value = "/notice", produces = "text/plain; charset=utf-8")
//	public ResponseEntity<String> noticeInsert(List<MultipartFile> fileList){
//		log.info("noticeInsert() 실행...!");
//		for (MultipartFile multipartFile : fileList) {
//			log.info("originalFileName : " + originalFileName);
//			
//		}
//		String originalFileName = file.getOriginalFilename();
//		ResponseEntity<String> entity = new ResponseEntity<String>("UPLOAD SUCCESS", HttpStatus.OK);
//		return entity;
//	}
	// 문의 리스트 inquiry list
	@ResponseBody
	@GetMapping(value = "/inquiry", produces = "application/json;charset=utf-8")
	public List<InquiryVO> inquiryList(){
		log.debug("inquiryList controller 도착");
		return inquiryService.inquiryList();
	}
	
	// 문의 1개 조회
	@ResponseBody
	@GetMapping(value = "/inquiry/{inq_no}", produces = "application/json;charset=utf-8")
	public InquiryVO inquiryOne(@PathVariable("inq_no") String inquiry_no){
		log.debug("inquiryOne controller 도착");
		return inquiryService.inquiryOne(inquiry_no);
	}
	
	// 문의 댓글 등록
	@ResponseBody
	@PostMapping(value = "/inquiry/rep", produces = "application/json;charset=utf-8")
	public int inqRepInsert(@RequestBody InquiryReplyVO inqRepVO) {
		log.debug("inqRepInsert controller 도착");
		return inqRepService.inqRepInsert(inqRepVO);
	}
	// 문의 댓글 리스트 조회
	@ResponseBody
	@GetMapping(value = "/inquiry/rep", produces = "application/json;charset=utf-8")
	public List<InquiryReplyVO> inqRepList(){
		log.debug("inqRepList controller 도착");
		return inqRepService.inqRepList();
	}
}
