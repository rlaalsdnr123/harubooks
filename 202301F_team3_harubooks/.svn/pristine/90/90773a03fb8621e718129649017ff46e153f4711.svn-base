<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<!-- content wrapper -->
<div class="content-wrapper" style="padding : 10px;">
	<div class="row" style=" padding : 10px;">
		<div class="col-lg-12 grid-margin stretch-card" style="margin-bottom: 0">
			<div class="card">
				<div class="card-body">
					<div class="card-title-wrapper">
						<h4 class="card-title" style="font-size:1.25rem; font-family: 'orbit', sans-serif;">발주 신청 목록</h4>
						<div style="float:left;">
							<p class="card-description">
								전체 <code id="total"></code>건
							</p>
						</div>
						<div class="row dropdown" style="float:right; margin-bottom: 5px; margin-right : 8px;">
							<select id="option" name="searchType" style="width: 100px; border: 1px solid lightgray;">
								<option value="title" selected>도서명</option>
								<option value="author">저자</option>
								<option value="publisher">출판사</option>
							</select>
							<ul class="navbar-nav mr-lg-2">
								<li class="nav-item nav-search d-none d-lg-block">
									<div class="input-group">
										<input type="text" class="form-control" name="searchWord" id="searchWord" placeholder="검색" aria-label="search" aria-describedby="search"/>
										<div class="input-group-prepend hover-cursor" id="navbar-search-icon">
											<button type="button" id="search" style="width: 100px; border: 1px solid lightgray;">검색
												<i class="icon-search"></i>
											</button>
										</div>
									</div>
								</li>
							</ul>
						</div>
					</div>
					<div id="searchDisp" style="border : 1px solid black; width: 630px; height : 300px; position: absolute; z-index: 999; float : right; left: 490px; top: 103px; background: rgba(255,255,255, 1); overflow-y : scroll; display: none;">
					</div>
					<div class="table-responsive" style="width : 1100px;" >
						<table id="poreqTable" class="table table-hover" >
							<thead style="display : block;">
								<tr class="table-primary">
									<th style="width : 35px; ">번호</th>
									<th style="width : 150px;">상품번호</th>
									<th style="width : 385px;">도서명</th>
									<th style="width : 140px;">저자</th>
									<th style="width : 110px;">출판사</th>
									<th style="width : 85px; ">재고</th>
									<th style="width: 50px; padding-left: 3px; ">발주 수량</th> 
									<th style="width : 35px;"><input type="checkbox" id="chkAll"></th>
								</tr>
							</thead>
							<tbody id="tblDisp" style="display : block; height: 350px; overflow-y: auto;">
							</tbody>
						</table>
					</div>
				</div>
				<div>
					<div class="row" style="float:right; margin-right: 30px; margin-bottom: 18px">
						<button type="button" class="btn btn-primary" id="poBtn">발주</button>
					</div>
				</div>
				<!--
					발주 버튼을 클릭했을때 서버로 발주 신청을 넘길 form태그영역
					체크가 되어있는 발주 항목들 갯수만큼 각 input type hidden 요소들의 값이 매칭되서 서버로 넘어간다.
				-->
				<!-- <form action="/mng/remain/polist" method="post" id="poListForm">
					<sec:csrfInput/>
				</form> -->
			</div>
		</div>
	</div>
</div>
<script>
const tblDisp = document.querySelector("#tblDisp");
const search = document.querySelector("#search");				// 검색 btn
const option = document.querySelector("#option");				// select 박스
const searchInput = document.querySelector("#searchWord");		// 검색 input
const poBtn	= document.querySelector("#poBtn");					// 발주 버튼
const searchDisp = document.querySelector("#searchDisp");		// 검색 목록 출력할 div
let page = 1;


$(function(){
	fRemainListCntStatus(2);
	let searchType = option.value;
	let searchWord = searchInput.value;

	// 검색
	search.addEventListener("click", function(){
		page = 1;
		fRemainList();
	});

	// 전체 체크
	$(document).on("click", "#chkAll", function(){
		if($(this).is(":checked")){ //전체 체크
			$(".chkSub").attr("checked", true);
		}else{ //전체 해제
			$(".chkSub").attr("checked", false);
		}	
	});
	// 개별 체크시 확인
	$(document).on("click", ".chkSub", function(){
		if($(this).is(":checked")){ 
			let bookNo = $(this).closest('tr').find('td').eq(1).text();
			fPoListCheck(bookNo);
		}
	});

	// 발주버튼
	$(document).on("click", "#poBtn", function(){
		let poList = [];
		var html = "";
		$(".chkSub:checked").each(function(){
			let bookNo = $(this).closest('tr').find('td').eq(1).text();
			let pubNm = $(this).closest('tr').find('td').eq(4).text(); 
			let bookQty = $(this).closest('tr').find("input[name='book_qty']").val();
			let poData = {
				"book_no" : bookNo, 
				"pub_nm" : pubNm,
				"book_qty" : Number(bookQty) 
			}
			poList.push(poData);
			// fPoOne(book_no, pub_nm, book_qty);
			//html += "<input type='hidden' name='book_nos' value='"+book_no+"'/>";
			//html += "<input type='hidden' name='pub_nms' value='"+pub_nm+"'/>";
			//html += "<input type='hidden' name='book_qtys' value='"+book_qty+"'/>";
		});
		// 중복 확인
		// Swal.fire({
		// 			title : '수정 실패하였습니다.', 
		// 			text : '다시 시도해주세요.', 
		// 			icon : 'error',
		// 			confirmButtonText: '확인'
		// 		}).then(function (result) {
		// 			if (result.isConfirmed) {
		// 				// 확인 버튼을 클릭한 경우
		// 				location.href="/mng/notice";
		// 			}
		// 		}); 
		//html += '<sec:csrfInput/>';
		//$("#poListForm").html(html);
		//$("#poListForm").submit();
		// console.log("poList", poList);
		fPoReqList(poList);
	});
});


function fPoListCheck(bookNo){
	let cheSubs = document.querySelectorAll(".chkSub");
	let bookNos = document.querySelectorAll(".bookNos");
	$.ajax({
		url : "/mng/remain/polist",
		type : "GET",
		success : function(res){
			console.log(res);
			for(let i=0; i<res.mngPaginationInfoVO.dataList.length; i++){
				if(res.mngPaginationInfoVO.dataList[i].book_no == bookNo && res.mngPaginationInfoVO.dataList[i].ccg_r001 == '요청대기'){
					Swal.fire({
						title : '이미 발주된 상품입니다.', 
						text : '더 주문하시겠습니까?', 
						icon : 'question',
						showCancelButton: true,	// 취소버튼 생성
						cancelButtonText: '취소',
						confirmButtonText: '확인',
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33'
					}).then(function (result) {
						if (result.isConfirmed) {
							// 확인 버튼을 클릭한 경우
							for(let j=0; j<bookNos.length; j++) {
								if(bookNos[j].innerText == bookNo){
									cheSubs[j].checked = true;
								}
							}
						} else {
							for(let j=0; j<bookNos.length; j++) {
								if(bookNos[j].innerText == bookNo){
									cheSubs[j].checked = false;
								}
							}
						}
					}); 

				} 
			}
		}
	});
};

// // 수동 발주 1개 넘기기
// function fPoOne(book_no, pub_nm, book_qty){
// 	let data = {
// 			book_no : book_no,
// 			pub_nm : pub_nm,
// 			book_qty : book_qty
// 	};
// 	$.ajax({
// 		url : "/mng/remain/po",
// 		type : "POST",
// 		beforeSend : function(xhr){
// 			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
// 		},
// 		data : JSON.stringify(data),
// 		contentType : "application/json;charset=utf-8",
// 		success : function(res){
// 			alert(res);
// 		} 
// 	})
// }

// 수동 발주 리스트 넘기기
function fPoReqList(poList1){
	// 리스트로 넘길 때는 
	// 넘기는 data를 배열을 JSON.stringify로 해서 전달
	// controller에서 받을 때는 List<VO> 형태로 받아서 vo의 필드 값과 list에 담긴 json 객체의 key값이 같으면 자동 바인딩 됨.
	$.ajax({
		url : "/mng/remain/poreqlist",
		type : "POST",
		beforeSend : function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
		},
		data : JSON.stringify(poList1),
		contentType : "application/json;charset=utf-8",
		success : function(res){
			if(res == "success"){
				Swal.fire({
					title : '발주되었습니다.', 
					text : '발주 내역에서 확인해주세요.', 
					icon : 'success',
					confirmButtonText: '확인'
				}).then(function (result) {
					if (result.isConfirmed) {
						// 확인 버튼을 클릭한 경우
						location.href="/mng/po";
					}
				}); 
			}
			
		} 
	})
}

// 검색해서 재고 리스트 가져오기
function fRemainList(){
	var searchType = option.value;
	var searchWord = searchInput.value;
	
	$.ajax({
		url : "/mng/remain/list",
		type : "get",
		data : {
			searchType : searchType,
			searchWord : searchWord,
			page : page,
			status : "search"
		},
		contentType : "application/json;charset=utf-8",
		beforeSend : function(xhr) {
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
		},
		success : function(res){
			searchDisp.style.display = 'block'; 	
			let searchstr = "";
			console.log(res);
			searchstr += '<button type="button" class="close" aria-label="Close" onclick="fSearchClose()" style="float:right;"><span float:right; aria-hidden="true">&times;</span></button>';
			searchstr += "<table class='table table-hover' style='max-width : 600px; table-layout: fixed;'>"
			if(res.mngPaginationInfoVO.dataList.length == 0){
				searchstr += "<tr><td colspan='5' style='text-align : center;'>검색내역이 존재하지 않습니다.</td></tr>"
			} else {
				for(let i= 0; i<res.mngPaginationInfoVO.dataList.length; i++){
					searchstr += `<tr onclick="fAddList('\${res.mngPaginationInfoVO.dataList[i].book_no}')">`
					searchstr += 	`<td style="width : 65px; padding : 3px;"><img src='\${res.mngPaginationInfoVO.dataList[i].book_cover}' style="border-radius : 0; width : 60px; height : 60px;"></td>`
					searchstr += 	`<td style="width : 250px; padding : 3px; word-wrap: break-word; white-space: pre-wrap; height : auto;">\${res.mngPaginationInfoVO.dataList[i].book_title}</td>`
					searchstr += 	`<td style="width : 120px; padding : 3px; word-wrap: break-word; white-space: pre-wrap;">\${res.mngPaginationInfoVO.dataList[i].book_author}</td>`
					searchstr += 	`<td style="width : 120px; padding : 3px; word-wrap: break-word; white-space: pre-wrap;">\${res.mngPaginationInfoVO.dataList[i].pub_nm}</td>`
					searchstr += 	`<td style="width : 20px; padding : 5px;">\${res.mngPaginationInfoVO.dataList[i].bm_cnt}</td></tr>`
				}
			}
			searchDisp.innerHTML = searchstr;
		}
	});
}

// 발주 신청 목록에 추가될 재고 상태 리스트 가져오기
function fRemainListCntStatus(bm_cnt_status){
	$.ajax({
		url : "/mng/remain/list/"+bm_cnt_status,
		type : "get",
		data : {
			bm_cnt_status : bm_cnt_status,
			page : page,
			status : "po"
		},
		beforeSend : function(xhr) {
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
		},
		success : function(res){
			console.log(res);
			let tblstr = "";
			let book_qty = 0;

			for(let i= 0; i<res.mngPaginationInfoVO.dataList.length; i++){
				tblstr += `<tr><td style="width : 5%;">\${res.mngPaginationInfoVO.startRow + i}</td>`
				tblstr +=		`<td class="bookNos" style="width : 10%;">\${res.mngPaginationInfoVO.dataList[i].book_no}</td>`
				tblstr +=		`<td style="width : 50%; word-wrap: break-word;">\${res.mngPaginationInfoVO.dataList[i].book_title}</td>`
				tblstr +=		`<td style="width : 10%; word-wrap: break-word;">\${res.mngPaginationInfoVO.dataList[i].book_author}</td>`
				tblstr +=		`<td style="width : 10%; word-wrap: break-word;">\${res.mngPaginationInfoVO.dataList[i].pub_nm}</td>`
				if(`\${res.mngPaginationInfoVO.dataList[i].bm_cnt_status}` == 1){
					tblstr += 	`<td style="width : 3%; background-color : #ff4747; color : white; text-align : center;">\${res.mngPaginationInfoVO.dataList[i].bm_cnt}</td>`
				} else if(`\${res.mngPaginationInfoVO.dataList[i].bm_cnt_status}` == 2){
					tblstr += 	`<td style="width : 3%; background-color : #ffc100; text-align : center;">\${res.mngPaginationInfoVO.dataList[i].bm_cnt}</td>`
				} else {
					tblstr += 	`<td style="width : 3%; text-align : center;">\${res.mngPaginationInfoVO.dataList[i].bm_cnt}</td>`
				}
				book_qty = res.mngPaginationInfoVO.dataList[i].bm_bsc_cnt - res.mngPaginationInfoVO.dataList[i].bm_cnt;
				console.log("book_qty: " + book_qty);
				tblstr += 		`<td style="width : 10%; text-align: center;"><input type="number" name="book_qty" value='\${book_qty}' max="80" style="width: 50px;"></td>`
				tblstr +=		'<td style="width : 2%; text-align : center">';
				tblstr +=			'<input type="checkbox" class="chkSub">';
				tblstr += 		'</td>'
				tblstr += "</tr>"
				//<input type="hidden" value="\${orderOne.purchsMngList[i].order_no}_\${orderOne.purchsMngList[i].book_no}_\${orderOne.purchsMngList[i].book_title}_\${orderOne.purchsMngList[i].pl_cnt}_\${orderOne.purchsMngList[i].ae_id}">
			}
			tblDisp.innerHTML = tblstr;

			let total = document.querySelector("#total");
			total.innerText = res.mngPaginationInfoVO.totalRecord;
		}
	});
}

// 발주 신청 목록에 추가
function fAddList(book_no){
	console.log("addList " + book_no);
	$.ajax({
		url : "/mng/remain/detail/"+book_no,
		type : "get",
		success : function(res){
			console.log(res);
			if(res.bm_cnt>= res.bm_cnt_indct2 && res.bm_cnt <= res.bm_cnt_indct1){
				Swal.fire({
						title : '이미 발주 신청 목록에 존재하는 도서입니다.', 
						text : '목록을 확인해주세요!', 
						icon : 'error',
						confirmButtonText: '확인'
					});
			} else {
				let tblstr = "";
				tblstr += 		"<td style='width : 5%;'>추가</td>";
				tblstr += 		"<td style='width : 10%;'>" + res.book_no + "</td>";
				tblstr += 		"<td style='width : 50%; word-wrap: break-word;'>" + res.book_title + "</td>";
				tblstr += 		"<td style='width : 10%; word-wrap: break-word;'>" + res.book_author + "</td>";
				tblstr += 		"<td style='width : 10%; word-wrap: break-word;'>" + res.pub_nm + "</td>";
				if(res.bm_cnt_status == 1){
					tblstr += 	'<td style="width : 3%; background-color : #ff4747; color : white; text-align : center;">'+res.bm_cnt+'</td>';
				} else if(res.bm_cnt_status == 2){
					tblstr += 	'<td style="width : 3%; background-color : #ffc100; text-align : center;">'+res.bm_cnt + '</td>';
				} else {
					tblstr += 	'<td style="width : 3%; text-align : center;">'+ res.bm_cnt + '</td>';
				}
				tblstr += 		'<td style="width : 10%; padding-left: 25px;"><input type="number" name="book_qty" value="0" max="80" style="width: 50px;"></td>';
				tblstr += 		'<td style="width : 2%; text-align : center">';
				tblstr +=			'<input type="checkbox" class="chkSub">';
				tblstr += 		'</td>';
				
				// 테이블에 추가
				var table = document.querySelector("#poreqTable")
				var row = table.insertRow(1);
				row.innerHTML = tblstr;
	
				// 총 갯수 증가
				let totalDisp = document.querySelector("#total");
				let total = totalDisp.innerHTML;
				totalDisp.innerHTML = Number(total)+ 1;
			}
			// 검색 div 없애기
			searchDisp.style.display = 'none'; 
		}
	})
}

// 검색 div 닫기
function fSearchClose(){
	searchDisp.style.display = 'none';
}
</script>
	<!-- content wrapper End-->