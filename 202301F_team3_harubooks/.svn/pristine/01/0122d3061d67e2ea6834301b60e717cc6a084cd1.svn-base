<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
		
	<bean id="customAccessDenied" class="kr.or.ddit.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="kr.or.ddit.security.CustomLoginSuccessHandler"></bean>
	
	<!-- 스프링 시큐리티에서 제공하는 BCryptPasswordEncoder 클래스를 자바빈으로 등록 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<bean id="customUserDetailsService" class="kr.or.ddit.security.CustomUserDetailsService"></bean>
	
	<security:http>
		<!-- 로그인 성공 후 처리를 담당하는 처리자로 지정한다. -->
<!-- 		<security:form-login login-page="/login/signinForm" authentication-success-handler-ref="customLoginSuccess"/> -->
		
		<!-- 로그아웃 처리를 위한 URI를 지정하고, 로그아웃한 후에 세션을 무효화하기 위한 설정을 true로한다. -->
		<!-- 로그아웃을 하면 자동 로그인에 사용하는 쿠키도 삭제해 주도록 설정(delete-cookies) -->
<!-- 		<security:logout logout-url="/login/logout" invalidate-session="true" delete-cookies="remember-me, JSESSION_ID"/> -->
		
		<!-- 정적 리소스는 모두 접근 허용 -->
		<security:intercept-url pattern="/resources/**" access="permitAll"/>
		
		<!-- 로그인된 상태에서는 로그인이나 회원가입 화면에 접근 못하도록 함 -->
		<security:intercept-url pattern="/login/signinForm" access="isAnonymous()"/>
		<security:intercept-url pattern="/login/signupForm" access="isAnonymous()"/>
		<security:intercept-url pattern="/login/resetPw" access="permitAll()"/>
		<security:intercept-url pattern="/login/nonMemberDeliveryForm" access="isAnonymous()"/>
		
		
		<!-- 로그인 설정 -->
		<security:form-login
						username-parameter="ae_id"
						password-parameter="ae_pw"
						login-processing-url="/login"
						login-page="/login/signinForm"
						authentication-success-handler-ref="customLoginSuccess"
						authentication-failure-url="/login/signinForm?state=2"
		/>
		
		<!-- 로그아웃 설정 -->
		<security:logout
					logout-url="/login/logout"
					logout-success-url="/harubooks/home"
					invalidate-session="true"
					delete-cookies="true"
		/>
		
		<!-- 관리자/출판사 페이지 접근 권한 -->
<!-- 		<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/> -->
		
		<!-- 등록한 CustiomAccessDeniedHandler클래스를 활용한 접근 거부 처리자로 지정한다. (에세스 거부처리 로직구현) -->
 		<security:access-denied-handler ref="customAccessDenied"/>
	</security:http>
	
	<!-- 지정된 아이디와 패스워드로 로그인이 가능하도록 설정한다. -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>