<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="kr.or.ddit.mapper.bmk.HarustroyMapper">
 	
 	<!-- 게시판 타입 -->
  	<sql id="boardType">
		<if test="searchType != null and searchType == 'order-inq'">
			order by inq_cnt desc
		</if>
		<if test="searchType != null and searchType == 'order-recent'">
			order by wrt_ymd desc
		</if>
		<if test="searchType != null and searchType == 'order-like'">
			order by like_count desc
		</if>
	</sql>
	
	<!--  게시판 검색 -->
	<sql id="boardSearch">
		<if test="searchWord != null and searchSelect == 'board_title'">
			and  a.board_title like '%${searchWord}%'
		</if>
		<if test="searchWord != null and searchSelect == 'board_writer'">
			and  d.mem_nicknm like '%${searchWord}%'
		</if>
	</sql>
	
 	<!-- 피드 리스트 -->
 	<select id="boardList" resultType="boardVO" parameterType="boardVO">
		   select
			    d.board_no,
			    d.board_title,
			    d.board_content,
			    d.wrt_ymd,
			    d.last_mdfcn_ymd,
			    d.inq_cnt,
			    d.ccg_b004,
			    d.ua_no,
			    d.ae_id,
			    d.ua_stre_nm,
			    d.ua_etc,
			    d.mem_profile,
			    d.mem_nicknm,
			    d.rl_yn,
			    NVL(l.like_count, 0) AS like_count
			from (
			    select
			        c.*,
			        row_number() over ( <include refid="boardType"/>) rnum
			    from (
			        select
			            a.board_no,
			            a.board_title,
			            a.board_content,
			            a.wrt_ymd,
			            a.last_mdfcn_ymd,
			            a.inq_cnt,
			            a.ccg_b004,
			            a.ua_no,
			            a.ae_id,
			            b.ua_stre_nm,
			            b.ua_etc,
			            q.mem_profile,
			            q.mem_nicknm,
			            w.rl_yn
			        from board a
			        inner join unity_atchmnfl b on a.ua_no = b.ua_no and b.ua_sn = 1
			        inner join com_member q on a.ae_id = q.ae_id
			        left join board_like w on a.board_no = w.board_no and w.ae_id = #{ae_id}
			        where a.ccg_b004 = '자유게시판'
			        <include refid="boardSearch"/>
			    ) c
			) d
			left join (
			    select
			        board_no,
			        count(rl_yn) as like_count
			    from board_like
			    where rl_yn = 'Y'
			    group by board_no
			) l on d.board_no = l.board_no
			<![CDATA[
			where 
				d.rnum >= (#{currentPage} * #{screenSize}) - (#{screenSize} - 1) and d.rnum <= (#{currentPage} * #{screenSize}) 	
			]]>
 	</select>
 	
 	<!-- 피드 상세보기 -->
 	<select id="boardOne" parameterType="boardVO" resultType="boardVO">	
			select
			    a.board_no,
			    a.board_title,
			    a.board_content,
			    a.wrt_ymd,
			    a.last_mdfcn_ymd,
			    a.inq_cnt,
			    a.ccg_b004,
			    a.ua_no,
			    a.ae_id,
			    q.mem_profile,
			    q.mem_nicknm,
			    w.rl_yn,
			    nvl(like_count, 0) as like_count
			from board a
			inner join com_member q on a.ae_id = q.ae_id and a.board_no = #{board_no}
			left join board_like w on a.board_no = w.board_no and w.ae_id = #{ae_id}
			left join (
			    select
			        board_no,
			        count(rl_yn) as like_count
			    from board_like
			    where rl_yn = 'Y'
			    group by board_no
			) l on a.board_no = l.board_no
 	</select>
 
 	<!-- 조회수 증가 -->
 	<update id="upHit" parameterType="boardVO">
 		update board set
 			inq_cnt = inq_cnt + 1
 		where
 			board_no = #{board_no}
 	</update>
 	
 	<!-- 게시글 작성 -->
 	<insert id="storyInsert" parameterType="boardVO">
 		<selectKey keyProperty="board_no" resultType="string" order="BEFORE"> 
	 		select 'BO' || lpad(seq_bo.nextval, 10,'0') from dual
	 	</selectKey>
 			insert into board (
	 				board_no
	 	  		  , board_title
	 	  		  , board_content
	 	  		  , wrt_ymd
	 	  		  , last_mdfcn_ymd
	 	  		  , inq_cnt
	 	  		  , ccg_b004
	 	  		  , ua_no
	 	  		  , ae_id)
			values (
	  			  	#{board_no}
	  			  , #{board_title}
	  			  , #{board_content}
			  	  , sysdate
			  	  , 0
				  , 0
			      , #{ccg_b004}
			  	  , #{ua_no}
			  	  , #{ae_id})
 	</insert>
 	
 	<!-- 게시판 수정 -->
	<update id="updateHarustory" parameterType="boardVO">
		 update board set
    		board_title = #{board_title},
   			board_content = #{board_content},
   			last_mdfcn_ymd = sysdate
   		 where 
   			board_no = #{board_no}
   		 and
   		 	ae_id = #{ae_id}
	</update> 	
	
	<!-- 게시판 삭제 -->
	<delete id="deleteHarustory" parameterType="boardVO">
		delete from
			board
		where
			board_no = #{board_no}
		and
			ae_id = #{ae_id}
	</delete>
	
	<!-- 좋아요 삭제 -->
	<delete id="deleteLike" parameterType="boardVO">
		delete from
			board_like
		where
			board_no = #{board_no}
	</delete>
	
	
	<!-- 좋아요 있는지 체크 -->
	<select id="likeCehck" parameterType="boardVO" resultType="string">
		select
    		rl_yn
		from
    		board_like
		where
    		board_no = #{board_no}
    	and
    		ae_id = #{ae_id} 
	</select>
	
	<!--  좋아요 없으면 좋아요 추가 -->
	<insert id="likeAdd" parameterType="boardVO">
		insert into
			board_like(
				  board_no
				, ae_id
				, rl_yn
			)values(
				  #{board_no}
				, #{ae_id}
				, 'Y'  	
			)
	</insert>
	
	<!-- 좋아요가 Y이면 N으로 -->
	<update id="likeN" parameterType="boardVO">
		update board_like set
			rl_yn = 'N'
		where
			board_no = #{board_no}
		and
			ae_id = #{ae_id}
	</update>
	
	<!-- 좋아요가 N이면 Y으로 -->
	<update id="likeY" parameterType="boardVO">
		update board_like set
			rl_yn = 'Y'
		where
			board_no = #{board_no}
		and
			ae_id = #{ae_id}
	</update>
	
	
	<!--  좋아요 갯수 가지고 오기 -->
	<select id="getLike" parameterType="boardVO" resultType="int">
		select 
		    count(rl_yn) 
		from 
		    board a, board_like b
		where 
		    a.board_no = b.board_no
		and
		    a.board_no = #{board_no}
		and
		    rl_yn = 'Y'
	</select>
	
	<!-- 댓글 작성 -->
	<insert id="replyInsert" parameterType="replyVO">
		<selectKey keyProperty="reply_no" resultType="string" order="BEFORE"> 
	 		select 'RE' || LPAD(seq_re.nextval, 10, '0') from dual
	 	</selectKey>
		insert into 
			reply(
				reply_no
			  , reply_content
			  , reply_wrt_ymd
              , reply_mdfcn_ymd
              , reply_type
           	  , ccg_r003
              , board_no
              , ae_id  
			)values(
			    #{reply_no}
			  , #{reply_content}
			  , sysdate
			  , '0'
			  , #{reply_type}
			  , #{ccg_r003}
			  , #{board_no}
			  , #{ae_id}
			)
	</insert>
	
	<!-- 댓글 및 대댓글 삭제하기 -->
	<delete id="replyDelete" parameterType="replyVO">
		delete from
			reply
		where
			reply_no = #{reply_no}
		or
			reply_type = #{reply_no}
	</delete>
	
	<!-- 댓글 수정 -->
	<update id="updateApply" parameterType="replyVO">
		 update reply set
    		reply_content = #{reply_content},
   			reply_mdfcn_ymd = sysdate
   		 where 
   			reply_no = #{reply_no}
   		 and
   		 	ae_id = #{ae_id}
	</update> 
	
	
	<!-- 댓글 가져오기 -->
	<select id="getReplyList" parameterType="replyVO" resultType="replyVO">
	       select
                  d.reply_no
                , d.reply_content
                , d.reply_wrt_ymd
                , d.reply_mdfcn_ymd
                , d.reply_type
                , d.ccg_r003
                , d.ae_id
                , d.mem_profile
                , d.mem_nicknm
                , (SELECT COUNT(*) FROM reply WHERE reply_type = d.reply_no) AS reply_count
			from (
			    select
			        c.*,
			        row_number() over ( order by c.reply_no desc ) rnum
			    from (
                    select
                          a.reply_no
                        , a.reply_content
                        , a.reply_wrt_ymd
                        , a.reply_mdfcn_ymd
                        , a.reply_type
                        , a.ccg_r003
                        , a.ae_id
                        , b.mem_profile
                        , b.mem_nicknm
                    from
                        reply a, com_member b
                    where
                        a.ae_id = b.ae_id
                    and 
                        a.board_no = #{board_no}
                    and
                        a.reply_type = 'NO'
			    ) c
			) d
			<![CDATA[ 
			where 
				d.rnum >= (#{currentPage} * #{screenSize}) - (#{screenSize} - 1) and d.rnum <= (#{currentPage} * #{screenSize}) 	
			]]>
	</select>
	
	<!-- 대댓글 가져오기 -->
	<select id="getSubReplyList" parameterType="replyVO" resultType="replyVO">
			select
                  d.reply_no
                , d.reply_content
                , d.reply_wrt_ymd
                , d.reply_mdfcn_ymd
                , d.reply_type
                , d.ccg_r003
                , d.ae_id
                , d.mem_profile
                , d.mem_nicknm
			from (
			    select
			        c.*,
			        row_number() over ( order by c.reply_no desc ) rnum
			    from (
                    select
                          a.reply_no
                        , a.reply_content
                        , a.reply_wrt_ymd
                        , a.reply_mdfcn_ymd
                        , a.reply_type
                        , a.ccg_r003
                        , a.ae_id
                        , b.mem_profile
                        , b.mem_nicknm
                    from
                        reply a, com_member b
                    where
                        a.ae_id = b.ae_id
                    and
                        a.reply_type = #{reply_type}
			    ) c
			) d
			<![CDATA[ 
			where 
				d.rnum >= (#{currentPage} * #{subReplyScreenSize}) - (#{subReplyScreenSize} - 1) and d.rnum <= (#{currentPage} * #{subReplyScreenSize}) 	
			]]>
	
	</select>
	
 </mapper>