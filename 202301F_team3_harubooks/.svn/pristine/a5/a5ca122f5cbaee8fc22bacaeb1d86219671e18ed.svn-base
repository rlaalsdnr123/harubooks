<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
		<context:annotation-config />
<!-- 	dataSource : 데이터베이스와 관련된 정보를 설정한다 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="url"
			value="jdbc:log4jdbc:oracle:thin:@112.220.114.130:1521:xe" />
		<property name="username" value="TEAM3_202301F" />
		<property name="password" value="java" />
	</bean>

	<!-- 데이터베이스와 연결을 맺고 끊어질 때까지의 라이프 사이클을 관리해주는 SqlSessionTemplate 객체를 생성한다. 
		1) dataSource 2) Mapper xml의 위치 지정 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:/sqlmap/**/*_SQL.xml" />
		<property name="configLocation"
			value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
	</bean>

	<!-- 데이터베이스에 개발적으로 쿼리를 실행시키는 객체 이 객체를 통해서 query를 실행한다. -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" index="0"
			ref="sqlSessionFactory" />
	</bean>

	<!-- Mapper 인터페이스 설정 개발자가 직접 DAO를 설정하지 않아도 자동으로 Mapper 인터페이스를 활용하는 객체를 생성하게 
		된다. -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.or.ddit.mapper" />
	</bean>

	<!-- MultipartFile CommonsMultipartResolver 설정 시 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일 업로드 용량(10MB) -->
		<property name="maxUploadSize" value="10485760" />
		<!-- 파일 인코딩 UTF-8 -->
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	
	<!-- 이미지 업로드시 저장되는 경로 -->
	<bean id="uploadImg" class="java.lang.String">
		<constructor-arg
			value="C:/harubooks/data/images" />
	</bean>
	
	<!-- 파일 업로드시 저장되는 경로 -->
	<bean id="uploadFiles" class="java.lang.String">
		<constructor-arg
			value="C:/harubooks/data/files" />
	</bean>
	
<!-- 	 15장 트랜잭션 설정 : 트랜잭션 관리자의 빈을 정의   -->
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 	<property name="dataSource" ref="dataSource"/>
	 </bean>
	
	<!-- 메일 보내기 빈 등록 -->

   <!-- navermail설정 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.naver.com"/>
      <property name="port" value="465"/>
      <property name="username" value="k98328@naver.com"/>
      <property name="password" value="4ERFC6UM1GV2"/>
      
      <!-- 보안 연결 SSL과 관련된 설정 -->
      <property name="javaMailProperties">
         <props>
            <prop key="mail.smtp.auth">true</prop>
            <prop key="mail.smtp.starttls.enable">true</prop>
            <prop key="mail.smtps.checkserveridentity">true</prop>
            <prop key="mail.smtps.ssl.trust">*</prop>
            <prop key="mail.debug">true</prop>
            <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
         </props>
      </property>
   </bean>
	
	 
<!-- 	 어노테이션 기반의 트랜잭션 제어를 활성화합니다.  -->
	 <tx:annotation-driven/>
	 
	 
<!-- 	스프링 AOP 활성화  -->
	<aop:aspectj-autoproxy/>
	
	<context:component-scan base-package="kr.or.ddit.config" />
	<context:component-scan base-package="kr.or.ddit.aop"/>
 	<context:component-scan base-package="kr.or.ddit.service"/>
 </beans>
